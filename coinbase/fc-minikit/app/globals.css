@tailwind base;
@tailwind components;
@tailwind utilities;

/* Global CSS Reset - Remove all default margins and padding */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html, body {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  overflow-x: hidden;
}

:root {
  --background: #ffffff;
  --foreground: #111111;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #111111;
    --foreground: #ffffff;
  }
}

body {
  color: var(--foreground);
  background: var(--background);
  font-family: "Geist", sans-serif;
  font-optical-sizing: auto;
  font-weight: 400;
  font-style: normal;
  font-size: 16px; /* Fixed font size instead of 80% */
}

/* Ensure all text elements have readable font sizes */
h1, h2, h3, h4, h5, h6 {
  font-size: inherit; /* Use default heading sizes */
}

p, span, div, button, input, textarea {
  font-size: inherit; /* Inherit from body */
}

/* Ensure minimum readable font size */
* {
  min-font-size: 14px;
}

.image-area {
  width: 100%;
  max-width: 1260px;
  height: auto;
  aspect-ratio: 1260 / 2200;
  position: relative;
  margin: 0 auto;
  overflow: hidden;
}

.share-button {
  position: absolute;
  bottom: 100px;
  left: 50%;
  transform: translateX(-50%);
}

/* Responsive Mini App Container Classes */
.gallery-hero-container {
  /* Default: Mini App dimensions - maintain 1260x2400 ratio */
  width: 100%;
  max-width: 1260px;
  height: auto;
  aspect-ratio: 1260 / 2400;
  margin: 0 auto;
  background: transparent;
  overflow: visible;
  position: relative;
  box-shadow: 0 0 10px rgba(0,0,0,0.1);
  border: 1px solid #ccc;
  border-radius: 8px;
  /* Remove cursor and touch-action to allow button interactions */
  cursor: default;
  touch-action: manipulation; /* Allow button interactions */
  /* Remove height constraints to show full content */
  min-height: auto;
  max-height: none;
}

/* Mobile: Scale to fit viewport while maintaining ratio */
@media (max-width: 768px) {
  .gallery-hero-container {
    width: 100vw !important;
    height: auto !important;
    max-width: none !important;
    aspect-ratio: 1260 / 2400 !important;
    border-radius: 0 !important;
    border: none !important;
    box-shadow: none !important;
    min-height: auto !important;
    max-height: none !important;
    /* Ensure full content is visible */
    overflow: visible !important;
  }
  
  .gallery-hero-image-container {
    width: 100% !important;
    height: auto !important;
    aspect-ratio: 1260 / 2400 !important;
  }
  
  .gallery-hero-image-container img {
    width: 100% !important;
    height: auto !important;
    aspect-ratio: 1260 / 2400 !important;
    object-fit: cover !important;
  }
}

/* Desktop: Maintain aspect ratio with proper scaling */
@media (min-width: 1200px) {
  .gallery-hero-container {
    width: 100%;
    max-width: 1260px;
    height: auto;
    aspect-ratio: 1260 / 2400;
    min-height: auto;
    max-height: none;
  }
}

/* Mini App environment detection (if needed) */
.mini-app-environment .gallery-hero-container {
  width: 1260px;
  height: 2400px;
  max-width: none;
  aspect-ratio: none;
  min-height: 2400px;
  max-height: 2400px;
}

/* Responsive image container */
.gallery-hero-image-container {
  width: 100%;
  height: auto;
  aspect-ratio: 1260 / 2400;
  position: relative;
}

.gallery-hero-image-container img {
  width: 100%;
  height: auto;
  aspect-ratio: 1260 / 2400;
  object-fit: cover;
  display: block;
}

/* Mobile responsive button sizing */
@media (max-width: 768px) {
  .unlock-button {
    padding: 10px 20px !important;
    font-size: 14px !important;
    border-radius: 20px !important;
    min-width: 100px !important;
    max-width: 250px !important;
  }
}

/* Hide any global navigation overlays from MiniKit */
[data-minikit-navigation],
[class*="minikit-navigation"],
[class*="minikit-overlay"],
[class*="minikit-button"],
[class*="minikit-nav"],
[class*="minikit-next"],
[class*="minikit-prev"],
[class*="minikit-arrow"] {
  display: none !important;
  visibility: hidden !important;
  opacity: 0 !important;
  pointer-events: none !important;
}

/* Hide specific button overlays that might be added by MiniKit (not OnchainKit buttons) */
button[class*="minikit"],
button[class*="navigation"],
button[class*="overlay"],
button[class*="next"],
button[class*="prev"]:not([class*="ock"]) {
  display: none !important;
  visibility: hidden !important;
  opacity: 0 !important;
  pointer-events: none !important;
}

/* Hide any global navigation elements */
.navigation-overlay,
.nav-overlay,
.button-overlay,
.next-button,
.prev-button {
  display: none !important;
  visibility: hidden !important;
  opacity: 0 !important;
  pointer-events: none !important;
}

/* Hide any text-based navigation elements */
/* Removed :contains() pseudo-class rules - not valid CSS */

/* Hide any elements with navigation-related text content */
[data-text*="Next"],
[data-text*="NEXT"],
[data-text*="â†’"],
[data-text*=">"] {
  display: none !important;
  visibility: hidden !important;
  opacity: 0 !important;
  pointer-events: none !important;
}

/* Hide any elements that might contain navigation text */
/* Removed :contains() pseudo-class rules - not valid CSS */

/* Additional comprehensive rules for navigation elements only (not all buttons) */
[class*="nav"]:not([class*="ock"]),
[class*="navigation"],
[class*="overlay"],
[class*="next"],
[class*="prev"],
[class*="arrow"],
[class*="arrow-right"],
[class*="arrow-left"],
[class*="chevron"],
[class*="chevron-right"],
[class*="chevron-left"] {
  display: none !important;
  visibility: hidden !important;
  opacity: 0 !important;
  pointer-events: none !important;
}
